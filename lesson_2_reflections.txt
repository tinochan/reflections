What happens when you initialize a repository? Why do you need to do it?
.git folder will be created and the files inside the directory and subdirectories can be tracked later on.

How is the staging area different from the working directory and the repository? What value do you think it offers?
It give you chances to think carefully if the later on commit will be a logically integrated one. You may roll back before you are ready.

How can you use the staging area to make sure you have one commit per logical change?
Before commit, I will use git diff --stages to check what changes are going to be commited. If there are more than one logical change, I can use git reset to remove centain files from the staging areas frist before commit and add them back again for another commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When you want to do some testing but don't want to affect the existing branch. And if you are working with other teammates which they are working on other tasks, branches will be a good way manage the conflict arose. 

How do the diagrams help you visualize the branch structure?
It show where does a new beanch branch out and show all the branches in a organized way.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result is both codes added in the seperate branches now can be found in the merged branch. That is, the power is gathered.
Because the flow is united -> seperate -> united

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
Automatic merging helped us to highlight those areas when conflict happens. It will be more accourate to spot those conflicts out if we have get used to the label.